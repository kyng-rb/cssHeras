Grid cell size -> The set the cell size of the grid items, grid provide us
a property, that is grid-template-columns/rows that accept a list of values
these represents the number of columns/rows and his sizes, the values are web
measures and accept another extra measure that is fr.

fr -> represents a fraction and divide the blank space around the cell -- TODO: Improve this comment definition

Another thing that accepts those properties is the function repeat, that receive
two parameters, the first is the number of iterations and the second a pattern
of sizes that normally is one value. For example: 
repeat(4, 75px): represent 75px 75px 75px 75px or 4 columns/rows of that size
repeat(2, 50px 70px): represent 50px 70px 50px 70px as we says the second parameter
            represent a pattern it mean that is going to repeat for every iteration.  

Explicit Grid: The grid that we define with the properties grid-template-columns/rows is the explicit grid,
an object like a table where we define the size.

Implicit Grid: The grid that we do not define but still is draw by the browser is the implicit grid, for example
define 10 elements and a grid of 3*3, the ten element is part of the implicit grid.

Once time defined the implicit grid we have several properties for modify his behavior.
grid-auto-columns: It define the width of the implicit columns, it only make sense when the auto flow is column.
grid-auto-rows: Define the height size of the rows that are part of the implicit grid, also make sense
                when the grid-auto-flow is rows.
grid-auto-flow: It define the behavior of draw of the elements that are part of the grid container but are no 
part of the explicit grid, it have 3 possible values.
columns: Add the implicit grid elements as columns
row: (default) add the implicit grid elements as rows.
dense: It add the implicit grid elements on the empty places of the screen, it make sense when we draw a grid 
but after move some cells we ending have empty cell places, dense try to include the implicit elements for 
fill that places, it can be used with row and column values.

MinMax -> To set measure to the cells from the container we have a function to manage the resize of the cell when 
the browser is expanded or reduced, that function is min max, accept two parameters thats are as his names says, the 
min and the max value of size in main or cross axis that a cell could reach.

min-content -> This is a value used as a grid measure, and basically says to his property that the value of the element
is going to be equal to the min expression of the content. usually the content can be resized in depends of his container
for example with text their can jump to other line.

max-content -> This value also is used as a grid measure, and represent the value of the content without resizing or anything
it is the value of the content expanded.

auto-fill -> For set the columns or rows we usually define a number of elements in the grid-template-columns/rows property, this 
property allows us let to the browser decide it, using all the space in the viewport but without resize the elements, this property
divide the viewport size between the size of a cell and create all the divisions that he can.

auto-fit -> Works in the same way of auto-fill but it overwrite the size of the elements with the goal of fill all the viewport,
leaving it with no white spaces